# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: trigger-tests-on-a-pull-request

on:
  pull_request:
    branches: [ main ]

  # Allows us to run this workflow manually as well from the Actions tab
  workflow_dispatch:

jobs:
  touched-test-files:
    runs-on: ubuntu-latest # windows-latest || macos-latest
    name: Touched test files
    permissions:
      pull-requests: read
    outputs:
      test_files_to_run: ${{ steps.list_touched_files.outputs.test_files }}
    steps:
      - name: Fetch changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          # Avoid using single or double quotes for multiline patterns
          files: src/test/**/*.java

      - name: List changed test files
        id: list_touched_files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
        run: |
          tests="" # Initialize the empty variable. If passed empty, this will have no effect on the command.
          for file in ${ALL_CHANGED_FILES}; do
            filename=$(basename "$file")
            echo "$filename was changed"
            if [ -z "$tests" ]; then
              tests="$filename"
            else
              tests="$tests,$filename"
            fi  
          done
          echo "--grep input to send: $tests" 
          echo "test_files=$tests"  >> "$GITHUB_OUTPUT"

  trigger-tests-on-a-pull-request:
    needs: touched-test-files
    uses: ./.github/workflows/reusable-workflow-to-run-tests.yml
    with:
      tags-of-tests-to-include: ""
      test-files-to-include: "${{needs.touched-test-files.outputs.test_files_to_run}}"
      tags-of-tests-to-exclude: ""
      run-name: "${{ github.event.pull_request.title }}"
    secrets: inherit
